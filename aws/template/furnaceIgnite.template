{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "ECSInstanceType": {
            "Type": "String",
            "Default": "t2.micro",
            "Description": "EC2 instance type to use for ECS Cluster."
        },
        "ClusterName": {
            "Type": "String",
            "Default": "furnaceIgnite",
            "Description": "The name to use for the ECS Cluster."
        },
        "TaskName": {
            "Type": "String",
            "Default": "stackUpdaterTask",
            "Description": "The name to use for the stack updater task."
        },
        "TaskContainerImage": {
            "Type": "String",
            "Default": "966318141838.dkr.ecr.eu-west-1.amazonaws.com/project-furnace/deploy-will:latest",
            "Description": "The docker image to use for the Stack Updater Task"
        },
        "TaskContainerName": {
            "Type": "String",
            "Default": "stackUpdater",
            "Description": "The container name for the Stack Updater Task"
        },
        "BootstrapCodeBucketName": {
            "Type": "String",
            "Default": "furnace-bootstrap",
            "Description": "The name of the bootstrap code bucket."
        },
        "GitUsername": {
            "Type": "String",
            "Description": "GIT token (stringified {token: <token>}",
            "NoEcho": true
        },
        "GitToken": {
            "Type": "String",
            "Description": "GIT token",
            "NoEcho": true
        },
        "NpmToken": {
            "Type": "String",
            "Description": "NPM Token for private repos",
            "NoEcho": true
        }
    },
    "Mappings" : {
        "RegionMap" : {
            "us-east-2"      : { "AMI" : "ami-0307f7ccf6ea35750" },
            "us-east-1"      : { "AMI" : "ami-045f1b3f87ed83659" },
            "us-west-2"      : { "AMI" : "ami-01b70aea4161476b7" },
            "us-west-1"      : { "AMI" : "ami-0285183bbef6224bd" },
            "eu-west-3"      : { "AMI" : "ami-0f4738fbeb53e6c3a" },
            "eu-west-2"      : { "AMI" : "ami-01bee3897bba49d78" },
            "eu-west-1"      : { "AMI" : "ami-0627e141ce928067c" },
            "eu-central-1"   : { "AMI" : "ami-0eaa3baf6969912ba" },
            "ap-northeast-2" : { "AMI" : "ami-00294948a592fc052" },
            "ap-northeast-1" : { "AMI" : "ami-05b296a384694dfa4" },
            "ap-southeast-2" : { "AMI" : "ami-02c73ee1100ce3e7a" },
            "ap-southeast-1" : { "AMI" : "ami-050865a806e0dae53" },
            "ca-central-1"   : { "AMI" : "ami-0f552e0a86f08b660" },
            "ap-south-1"     : { "AMI" : "ami-01ef9f6a829ae3956" },
            "sa-east-1"      : { "AMI" : "ami-084b1eee100c102ee" },
            "us-gov-west-1"  : { "AMI" : "ami-1dafcb7c" }
        }
    },
    "Conditions" : {
        "GitTokenDefined" : {"Fn::Not": [{"Fn::Equals" : [{"Ref" : "GitToken"}, ""]}] },
        "NpmTokenDefined" : {"Fn::Not": [{"Fn::Equals" : [{"Ref" : "NpmToken"}, ""]}] },
        "NpmOrGitDefined" : {"Fn::Or": [ {"Condition": "GitTokenDefined"}, {"Condition": "NpmTokenDefined"} ] }
    },
    "Resources": {
        "furnaceIgniteSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "GroupDescription": "furnaceIgniteSG",
                "GroupName": "furnaceIgniteSG",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "0",
                        "ToPort": "65535",
                        "CidrIpv6": "::/0"
                    }
                ]
            }
        },
        "furnaceIgniteECS": {
            "Type": "AWS::ECS::Cluster",
            "Properties": {
                "ClusterName": {
                    "Ref": "ClusterName"
                }
            }
        },
        "furnaceIgniteInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "furnaceIgniteInstanceProfile"
                },
                "ImageId": { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI"]},
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {"Fn::Join": ["-", [{ "Ref" : "AWS::StackName" }, "furnaceIgnite"]]}
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "echo ECS_CLUSTER=",
                                {
                                    "Ref": "ClusterName"
                                },
                                " >> /etc/ecs/ecs.config\n",
                                "echo ECS_ENABLE_TASK_IAM_ROLE=true >> /etc/ecs/ecs.config"
                            ]
                        ]
                    }
                },
                "InstanceType": {
                    "Ref": "ECSInstanceType"
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "furnaceIgniteSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "PrivateSubnet"
                }
            }
        },
        "furnaceIgniteInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "furnaceIgniteRole"
                    }
                ]
            }
        },
        "furnaceIgniteRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role",
                    "arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess"
                ]
            }
        },
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": "10.10.0.0/16",
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "furnaceIgniteVPC"
                    }
                ]
            }
        },
        "PrivateSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.10.0.0/24",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "furnaceIgnitePrivateSubnet"
                    }
                ]
            }
        },
        "PublicSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "CidrBlock": "10.10.1.0/24",
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "furnaceIgnitePublicSubnet"
                    }
                ],
                "MapPublicIpOnLaunch": true
            }
        },
        "PrivateSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PrivateSubnet"
                },
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                }
            }
        },
        "PublicSubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "PublicSubnet"
                },
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                }
            }
        },
        "PrivateRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "furnageIgnitePrivateRT"
                    }
                ]
            }
        },
        "PublicRouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "furnageIgnitePublicRT"
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "furnaceIgniteInternetGateway"
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "NATGW": {
            "DependsOn": [
                "InternetGateway"
            ],
            "Type": "AWS::EC2::NatGateway",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "EIP",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "PublicSubnet"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "furnaceIgniteNATGw"
                    }
                ]
            }
        },
        "EIP": {
            "Type": "AWS::EC2::EIP",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "PrivateDefaultRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGW"
                }
            }
        },
        "PublicDefaultRoute": {
            "Type": "AWS::EC2::Route",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicRouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "updateStackTask": {
            "Type": "AWS::ECS::TaskDefinition",
            "Properties": {
                "ContainerDefinitions": [
                    {
                        "Name": {"Ref":"TaskContainerName"},
                        "Image": {"Ref":"TaskContainerImage"},
                        "Cpu": "1",
                        "Memory": "768",
                        "Essential": true,
                        "LogConfiguration": {
                            "LogDriver": "awslogs",
                            "Options": {
                                "awslogs-group": {"Fn::Join": ["",["/ecs/",{"Ref":"TaskName"}]]},
                                "awslogs-region": { "Ref" : "AWS::Region" },
                                "awslogs-stream-prefix": "ecs"
                            }
                        }
                    }
                ],
                "NetworkMode": "bridge",
                "Family": {"Ref":"TaskName"},
                "TaskRoleArn": {"Fn::GetAtt": [
                    "updateStackTaskRole",
                    "Arn"
                ]}
            }
        },
        "updateStackTaskRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ecs-tasks.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "updateStackTaskRolePolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [{ "Fn::If": [ "NpmOrGitDefined",
                                { 
                                    "Effect": "Allow",
                                    "Action": "secretsmanager:GetSecretValue",
                                    "Resource": [
                                        { "Fn::If": [ "GitTokenDefined", {"Ref": "gitTokenSecret" }, {"Ref" : "AWS::NoValue"}] },
                                        { "Fn::If": [ "NpmTokenDefined", {"Ref": "npmTokenSecret" }, {"Ref" : "AWS::NoValue"} ] }
                                    ]
                                }, {"Ref" : "AWS::NoValue"}]},
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "lambda:*",
                                        "kinesis:*",
                                        "iam:*",
                                        "s3:*",
                                        "sts:*"
                                    ],
                                    "Resource": [
                                        {"Fn::Join": [":", ["arn:aws:lambda", {"Ref": "AWS::Region"}, {"Ref": "AWS::AccountId"}, "*"]]},
                                        {"Fn::Join": [":", ["arn:aws:kinesis", {"Ref": "AWS::Region"}, {"Ref": "AWS::AccountId"}, "*"]]},
                                        {"Fn::Join": [":", ["arn:aws:sts:", {"Ref": "AWS::AccountId"}, "*"]]},
                                        {"Fn::Join": [":", ["arn:aws:s3::", {"Fn::Join": ["",[{"Ref":"ArtifactBucket"},"/*"]]}]]},
                                        {"Fn::Join": [":", ["arn:aws:s3::", {"Fn::Join": ["",[{"Ref":"LogsBucket"},"/*"]]}]]},
                                        {"Fn::Join": [":", ["arn:aws:iam:", {"Ref": "AWS::AccountId"}, "*"]]}
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "updateStackTaskLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
                "LogGroupName": {"Fn::Join": ["",["/ecs/",{"Ref":"TaskName"}]]}
            }
        },
        "deployExecLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ],
                "Policies": [
                    {
                        "PolicyName": "deployExecLambdaRolePolicy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "ecs:SubmitTaskStateChange",
                                        "ecs:RunTask",
                                        "ecs:StartTask",
                                        "ecs:StopTask"
                                    ],
                                    "Resource": "arn:aws:ecs:*:*:*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iam:GetRole",
                                        "iam:PassRole"
                                    ],
                                    "Resource": {"Fn::GetAtt": [
                                        "updateStackTaskRole",
                                        "Arn"
                                    ]}
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "deployExecLambda": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "index.handler",
                "Role": {
                    "Fn::GetAtt": [
                        "deployExecLambdaRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "S3Bucket": { "Ref": "BootstrapCodeBucketName" },
                    "S3Key": "deploy-exec" 
                },
                "Description": "Lambda function to run the task to deploy Furnace",
                "FunctionName": {"Fn::Join": ["-", [{ "Ref" : "AWS::StackName" }, "deployExec"]]},
                "Environment": {
                    "Variables": {
                        "TASK_DEFINITION": {"Ref":"TaskName"},
                        "CONTAINER_NAME": {"Ref":"TaskContainerName"},
                        "GIT_USERNAME": {"Ref":"GitUsername"},
                        "CLUSTER": {"Ref":"ClusterName"},
                        "BUILD_BUCKET": {"Ref":"ArtifactBucket"},
                        "PLATFORM": "aws",
                        "FURNACE_INSTANCE": { "Ref" : "AWS::StackName" }
                    }
                },
                "Runtime": "nodejs8.10",
                "Timeout": 30,
                "MemorySize": 128
            }
        },
        "deployExecLambdaSubscription": {
            "Type": "AWS::SNS::Subscription",
            "Properties": {
                "Protocol": "lambda",
                "Endpoint": {
                    "Fn::GetAtt": [
                        "deployExecLambda",
                        "Arn"
                    ]
                },
                "TopicArn": {
                    "Ref": "FurnaceSNSTopic"
                }
            }
        },
        "FurnaceSNSTopic": {
            "Type": "AWS::SNS::Topic",
            "Properties": {
                "TopicName": {"Fn::Join": ["-", [{ "Ref" : "AWS::StackName" }, "FurnaceStackUpdates"]]}
            }
        },
        "deployTriggerLambda": {
            "DependsOn": ["FurnaceSNSTopic"],
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": { "Ref": "BootstrapCodeBucketName" },
                    "S3Key": "deploy-trigger" 
                },
                "Description": "Lambda function to trigger the deployment of Furnace",
                "FunctionName": {"Fn::Join": ["-", [{ "Ref" : "AWS::StackName" }, "deployTrigger"]]},
                "Handler": "index.handler",
                "Role": { "Fn::GetAtt": ["deployTriggerLambdaRole", "Arn"]},
                "Runtime": "nodejs8.10",
                "Timeout": 30,
                "MemorySize": 128,
                "Environment": {
                    "Variables": {
                        "TOPIC": { "Ref": "FurnaceSNSTopic" },
                        "FURNACE_INSTANCE": { "Ref" : "AWS::StackName" }
                    }
                }
            }
          },
          "ArtifactBucket": {	
            "Type": "AWS::S3::Bucket",	
            "Properties": {	
                "BucketName": { "Fn::Join": ["-", [{ "Ref" : "AWS::StackName" }, { "Ref" : "AWS::Region" }, "artifact", "bucket" ] ] }
            }	
          },
          "LogsBucket": {	
            "Type": "AWS::S3::Bucket",	
            "Properties": {	
                "BucketName": { "Fn::Join": ["-", [{ "Ref" : "AWS::StackName" }, { "Ref" : "AWS::Region" }, "logs", "bucket" ] ] }
            }	
          },
          "deployTriggerLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Statement": [{
                  "Effect": "Allow",
                  "Principal": { "Service": ["lambda.amazonaws.com"] },
                  "Action": ["sts:AssumeRole"]
                }]
              },
              "Policies" : [{ "Fn::If": [ "GitTokenDefined", 
                {
                    "PolicyName": "deployTriggerLambdaRolePolicy",
                    "PolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": "secretsmanager:GetSecretValue",
                                "Resource": {"Ref": "gitTokenSecret" }
                            }
                        ]
                    }
                }, {"Ref" : "AWS::NoValue"} ]
            }],
              "Path": "/",
              "ManagedPolicyArns": [
                  "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                  "arn:aws:iam::aws:policy/AmazonSNSFullAccess"
                ]
            }
          },
          "hookResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "api"
                },
                "PathPart": "hook",
                "ParentId": {
                    "Fn::GetAtt": [
                        "api",
                        "RootResourceId"
                    ]
                }
            }
        },
        "apiResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "api"
                },
                "PathPart": "api",
                "ParentId": {
                    "Fn::GetAtt": [
                        "api",
                        "RootResourceId"
                    ]
                }
            }
        },
        "deployResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "PathPart": "deploy",
                "ParentId": {
                    "Ref": "apiResource"
                },
                "RestApiId": {"Ref":"api"}
            }
        },
        "deployPOST": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "POST",
                "RestApiId": {
                    "Ref": "api"
                },
                "ResourceId": {
                    "Ref": "deployResource"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {"Fn::Join": ["",
                        ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["deployTriggerLambda", "Arn"]}, "/invocations"]
                    ]}
                }
            }
        },    
        "hookPOST": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "HttpMethod": "POST",
                "RestApiId": {
                    "Ref": "api"
                },
                "ResourceId": {
                    "Ref": "hookResource"
                },
                "AuthorizationType": "NONE",
                "Integration": {
                    "Type": "AWS_PROXY",
                    "IntegrationHttpMethod": "POST",
                    "Uri": {"Fn::Join": ["",
                        ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["deployTriggerLambda", "Arn"]}, "/invocations"]
                    ]}
                }
            }
        }, 
        "api": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "Name": "Deploy API"
            }
        },
        "apiGatewayCloudWatchLogsRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [{
                    "Effect": "Allow",
                    "Principal": { "Service": ["apigateway.amazonaws.com"] },
                    "Action": ["sts:AssumeRole"]
                }]
                },
                "Policies": [{
                "PolicyName": "ApiGatewayLogsPolicy",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [{
                    "Effect": "Allow",
                    "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:DescribeLogGroups",
                        "logs:DescribeLogStreams",
                        "logs:PutLogEvents",
                        "logs:GetLogEvents",
                        "logs:FilterLogEvents"
                    ],
                    "Resource": "*"
                    }]
                }
                }]
            }
        },
        "apiGatewayAccount": {
            "Type": "AWS::ApiGateway::Account",
            "Properties": {
                "CloudWatchRoleArn": {"Fn::GetAtt": ["apiGatewayCloudWatchLogsRole", "Arn"] }
            }
        },
        "apiStage": {
            "DependsOn": ["apiGatewayAccount"],
            "Type": "AWS::ApiGateway::Stage",
            "Properties": {
                "DeploymentId": {"Ref": "apiDeployment"},
                "MethodSettings": [{
                    "DataTraceEnabled": true,
                    "HttpMethod": "*",
                    "LoggingLevel": "INFO",
                    "ResourcePath": "/*"
                }],
                "RestApiId": {"Ref": "api"},
                "StageName": "v1"
            }
        },
        "apiDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": ["deployPOST","hookPOST"],
            "Properties": {
                "RestApiId": {
                    "Ref": "api"
                }
            }
        },
        "deployTriggerPermission": {
            "Type": "AWS::Lambda::Permission", 
            "Properties": {
                "Action": "lambda:InvokeFunction", 
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {"Ref": "AWS::Region"},
                            ":",
                            {"Ref": "AWS::AccountId"},
                            ":",
                            {"Ref": "api" },
                            "/*"
                        ]
                    ]
                },
                "FunctionName": {"Fn::GetAtt": ["deployTriggerLambda", "Arn"]},
                "Principal": "apigateway.amazonaws.com"
            }
        },
        "deployExecLambdaInvokePermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "Action": "lambda:InvokeFunction",
              "Principal": "sns.amazonaws.com",
              "SourceArn": { "Ref": "FurnaceSNSTopic" },
              "FunctionName": {
                  "Fn::GetAtt": [ "deployExecLambda", "Arn" ]
                }
            }
        },
        "npmTokenSecret": {
            "Type" : "AWS::SecretsManager::Secret",
            "Condition": "NpmTokenDefined",
            "Properties" : {
              "Description" : "NPM Token for private repos",
              "SecretString" : { "Ref": "NpmToken" },
              "Name" : { "Fn::Join": ["", [{ "Ref" : "AWS::StackName" },"/NpmToken"]] }
            }
        },
        "gitTokenSecret": {
            "Type" : "AWS::SecretsManager::Secret",
            "Condition": "GitTokenDefined",
            "Properties" : {
              "Description" : "Git Token for private repos",
              "SecretString" : { "Ref": "GitToken" },
              "Name" : { "Fn::Join": ["", [{ "Ref" : "AWS::StackName" },"/GitToken"]] }
            }
        }
    },
    "Outputs" : {
      "apiURL" : {
        "Description": "The URL of the endpoint to send request to trigger deployments",  
        "Value": {"Fn::Join": ["", ["https://", {"Ref": "api"}, ".execute-api.", {"Ref": "AWS::Region"}, ".amazonaws.com/v1"]]}
      }
    }
}